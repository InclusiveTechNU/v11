/*
 * Copyright 2020 Northwestern Inclusive Technology Lab
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#include "core/devices/keyboard/keycode.h"

namespace keyboard {

uint32_t keycode_to_uint(keycode code) {
    switch (code) {
        case NUM_0_KEY:
            return 1;
        case NUM_1_KEY:
            return 2;
        case NUM_2_KEY:
            return 3;
        case NUM_3_KEY:
            return 4;
        case NUM_4_KEY:
            return 5;
        case NUM_5_KEY:
            return 6;
        case NUM_6_KEY:
            return 7;
        case NUM_7_KEY:
            return 8;
        case NUM_8_KEY:
            return 9;
        case NUM_9_KEY:
            return 10;
        case A_KEY:
            return 11;
        case S_KEY:
            return 12;
        case D_KEY:
            return 13;
        case F_KEY:
            return 14;
        case H_KEY:
            return 15;
        case G_KEY:
            return 16;
        case Z_KEY:
            return 17;
        case X_KEY:
            return 18;
        case C_KEY:
            return 19;
        case V_KEY:
            return 20;
        case B_KEY:
            return 21;
        case Q_KEY:
            return 22;
        case W_KEY:
            return 23;
        case E_KEY:
            return 24;
        case R_KEY:
            return 25;
        case Y_KEY:
            return 26;
        case T_KEY:
            return 27;
        case O_KEY:
            return 28;
        case U_KEY:
            return 29;
        case I_KEY:
            return 30;
        case P_KEY:
            return 31;
        case L_KEY:
            return 32;
        case J_KEY:
            return 33;
        case K_KEY:
            return 34;
        case M_KEY:
            return 35;
        case N_KEY:
            return 36;
        case MINUS_KEY:
            return 37;
        case EQUAL_KEY:
            return 38;
        case RIGHT_BRACKET_KEY:
            return 39;
        case LEFT_BRACKET_KEY:
            return 40;
        case QUOTE_KEY:
            return 41;
        case SEMICOLON_KEY:
            return 42;
        case BACKSLASH_KEY:
            return 43;
        case COMMA_KEY:
            return 44;
        case PERIOD_KEY:
            return 45;
        case SLASH_KEY:
            return 46;
        case GRAVE_KEY:
            return 47;
        case RETURN_KEY:
            return 48;
        case TAB_KEY:
            return 49;
        case SPACE_KEY:
            return 50;
        case DELETE_KEY:
            return 51;
        case FORWARD_DELETE_KEY:
            return 52;
        case ESCAPE_KEY:
            return 53;
        case COMMAND_KEY:
            return 54;
        case SHIFT_LEFT_KEY:
            return 55;
        case CAPSLOCK_KEY:
            return 56;
        case OPTION_LEFT_KEY:
            return 57;
        case CONTROL_LEFT_KEY:
            return 58;
        case SHIFT_RIGHT_KEY:
            return 59;
        case OPTION_RIGHT_KEY:
            return 60;
        case CONTROL_RIGHT_KEY:
            return 61;
        case END_KEY:
            return 62;
        case VOLUME_UP_KEY:
            return 63;
        case VOLUME_DOWN_KEY:
            return 64;
        case VOLUME_MUTE_KEY:
            return 65;
        case HELP_KEY:
            return 66;
        case HOME_KEY:
            return 67;
        case PAGE_UP_KEY:
            return 68;
        case PAGE_DOWN_KEY:
            return 69;
        case LEFT_ARROW_KEY:
            return 70;
        case RIGHT_ARROW_KEY:
            return 71;
        case DOWN_ARROW_KEY:
            return 72;
        case UP_ARROW_KEY:
            return 73;
        case KEYPAD_NUM_0_KEY:
            return 74;
        case KEYPAD_NUM_1_KEY:
            return 75;
        case KEYPAD_NUM_2_KEY:
            return 76;
        case KEYPAD_NUM_3_KEY:
            return 77;
        case KEYPAD_NUM_4_KEY:
            return 78;
        case KEYPAD_NUM_5_KEY:
            return 79;
        case KEYPAD_NUM_6_KEY:
            return 80;
        case KEYPAD_NUM_7_KEY:
            return 81;
        case KEYPAD_NUM_8_KEY:
            return 82;
        case KEYPAD_NUM_9_KEY:
            return 83;
        case KEYPAD_DECIMAL_KEY:
            return 84;
        case KEYPAD_MULTIPLY_KEY:
            return 85;
        case KEYPAD_PLUS_KEY:
            return 86;
        case KEYPAD_CLEAR_KEY:
            return 87;
        case KEYPAD_DIVIDE_KEY:
            return 88;
        case KEYPAD_ENTER_KEY:
            return 89;
        case KEYPAD_MINUS_KEY:
            return 90;
        case KEYPAD_EQUALS_KEY:
            return 91;
        case FUNCTION_KEY:
            return 92;
        case F1_KEY:
            return 93;
        case F2_KEY:
            return 94;
        case F3_KEY:
            return 95;
        case F4_KEY:
            return 96;
        case F5_KEY:
            return 97;
        case F6_KEY:
            return 98;
        case F7_KEY:
            return 99;
        case F8_KEY:
            return 100;
        case F9_KEY:
            return 101;
        case F10_KEY:
            return 102;
        case F11_KEY:
            return 103;
        case F12_KEY:
            return 104;
        case F13_KEY:
            return 105;
        case F14_KEY:
            return 106;
        case F15_KEY:
            return 107;
        case F16_KEY:
            return 108;
        case F17_KEY:
            return 109;
        case F18_KEY:
            return 110;
        case F19_KEY:
            return 111;
        case F20_KEY:
            return 112;
        case UNKNOWN_KEY:
            return 113;
        default:
            return 0;
    }
}

keycode uint_to_keycode(uint32_t num) {
    switch (num) {
        case 1:
            return NUM_0_KEY;
        case 2:
            return NUM_1_KEY;
        case 3:
            return NUM_2_KEY;
        case 4:
            return NUM_3_KEY;
        case 5:
            return NUM_4_KEY;
        case 6:
            return NUM_5_KEY;
        case 7:
            return NUM_6_KEY;
        case 8:
            return NUM_7_KEY;
        case 9:
            return NUM_8_KEY;
        case 10:
            return NUM_9_KEY;
        case 11:
            return A_KEY;
        case 12:
            return S_KEY;
        case 13:
            return D_KEY;
        case 14:
            return F_KEY;
        case 15:
            return H_KEY;
        case 16:
            return G_KEY;
        case 17:
            return Z_KEY;
        case 18:
            return X_KEY;
        case 19:
            return C_KEY;
        case 20:
            return V_KEY;
        case 21:
            return B_KEY;
        case 22:
            return Q_KEY;
        case 23:
            return W_KEY;
        case 24:
            return E_KEY;
        case 25:
            return R_KEY;
        case 26:
            return Y_KEY;
        case 27:
            return T_KEY;
        case 28:
            return O_KEY;
        case 29:
            return U_KEY;
        case 30:
            return I_KEY;
        case 31:
            return P_KEY;
        case 32:
            return L_KEY;
        case 33:
            return J_KEY;
        case 34:
            return K_KEY;
        case 35:
            return M_KEY;
        case 36:
            return N_KEY;
        case 37:
            return MINUS_KEY;
        case 38:
            return EQUAL_KEY;
        case 39:
            return RIGHT_BRACKET_KEY;
        case 40:
            return LEFT_BRACKET_KEY;
        case 41:
            return QUOTE_KEY;
        case 42:
            return SEMICOLON_KEY;
        case 43:
            return BACKSLASH_KEY;
        case 44:
            return COMMA_KEY;
        case 45:
            return PERIOD_KEY;
        case 46:
            return SLASH_KEY;
        case 47:
            return GRAVE_KEY;
        case 48:
            return RETURN_KEY;
        case 49:
            return TAB_KEY;
        case 50:
            return SPACE_KEY;
        case 51:
            return DELETE_KEY;
        case 52:
            return FORWARD_DELETE_KEY;
        case 53:
            return ESCAPE_KEY;
        case 54:
            return COMMAND_KEY;
        case 55:
            return SHIFT_LEFT_KEY;
        case 56:
            return CAPSLOCK_KEY;
        case 57:
            return OPTION_LEFT_KEY;
        case 58:
            return CONTROL_LEFT_KEY;
        case 59:
            return SHIFT_RIGHT_KEY;
        case 60:
            return OPTION_RIGHT_KEY;
        case 61:
            return CONTROL_RIGHT_KEY;
        case 62:
            return END_KEY;
        case 63:
            return VOLUME_UP_KEY;
        case 64:
            return VOLUME_DOWN_KEY;
        case 65:
            return VOLUME_MUTE_KEY;
        case 66:
            return HELP_KEY;
        case 67:
            return HOME_KEY;
        case 68:
            return PAGE_UP_KEY;
        case 69:
            return PAGE_DOWN_KEY;
        case 70:
            return LEFT_ARROW_KEY;
        case 71:
            return RIGHT_ARROW_KEY;
        case 72:
            return DOWN_ARROW_KEY;
        case 73:
            return UP_ARROW_KEY;
        case 74:
            return KEYPAD_NUM_0_KEY;
        case 75:
            return KEYPAD_NUM_1_KEY;
        case 76:
            return KEYPAD_NUM_2_KEY;
        case 77:
            return KEYPAD_NUM_3_KEY;
        case 78:
            return KEYPAD_NUM_4_KEY;
        case 79:
            return KEYPAD_NUM_5_KEY;
        case 80:
            return KEYPAD_NUM_6_KEY;
        case 81:
            return KEYPAD_NUM_7_KEY;
        case 82:
            return KEYPAD_NUM_8_KEY;
        case 83:
            return KEYPAD_NUM_9_KEY;
        case 84:
            return KEYPAD_DECIMAL_KEY;
        case 85:
            return KEYPAD_MULTIPLY_KEY;
        case 86:
            return KEYPAD_PLUS_KEY;
        case 87:
            return KEYPAD_CLEAR_KEY;
        case 88:
            return KEYPAD_DIVIDE_KEY;
        case 89:
            return KEYPAD_ENTER_KEY;
        case 90:
            return KEYPAD_MINUS_KEY;
        case 91:
            return KEYPAD_EQUALS_KEY;
        case 92:
            return FUNCTION_KEY;
        case 93:
            return F1_KEY;
        case 94:
            return F2_KEY;
        case 95:
            return F3_KEY;
        case 96:
            return F4_KEY;
        case 97:
            return F5_KEY;
        case 98:
            return F6_KEY;
        case 99:
            return F7_KEY;
        case 100:
            return F8_KEY;
        case 101:
            return F9_KEY;
        case 102:
            return F10_KEY;
        case 103:
            return F11_KEY;
        case 104:
            return F12_KEY;
        case 105:
            return F13_KEY;
        case 106:
            return F14_KEY;
        case 107:
            return F15_KEY;
        case 108:
            return F16_KEY;
        case 109:
            return F17_KEY;
        case 110:
            return F18_KEY;
        case 111:
            return F19_KEY;
        case 112:
            return F20_KEY;
        default:
            return UNKNOWN_KEY;
    }
}

}  // namespace keyboard
